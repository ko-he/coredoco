{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/bunkohei/dev/sandbox/tsuncore/next-app/src/components/ImageUpload.tsx"],"sourcesContent":["'use client';\n\nimport { useState, ChangeEvent, FormEvent } from 'react';\n\ninterface StoreInfo {\n  store_name?: string;\n  address?: string;\n  phone?: string;\n  hours?: string;\n  raw_response?: string;\n}\n\ninterface UploadResponse {\n  filepath: string;\n  store_info: StoreInfo;\n}\n\nexport default function ImageUpload() {\n  const [preview, setPreview] = useState<string>('');\n  const [storeInfo, setStoreInfo] = useState<StoreInfo | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleImageChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setPreview(e.target?.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const fileInput = form.querySelector('input[type=\"file\"]') as HTMLInputElement;\n\n    if (!fileInput.files?.length) {\n      setError('ファイルを選択してください');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    const formData = new FormData();\n    formData.append('image', fileInput.files[0]);\n\n    try {\n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('アップロードに失敗しました');\n      }\n\n      const data: UploadResponse = await response.json();\n      setStoreInfo(data.store_info);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'エラーが発生しました');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"row g-4\">\n      <div className=\"col-12\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title h4 mb-4\">画像をアップロード</h2>\n            <form onSubmit={handleSubmit}>\n              <div className=\"mb-3\">\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={handleImageChange}\n                  className=\"form-control\"\n                />\n              </div>\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"btn btn-primary\"\n              >\n                {isLoading ? '解析中...' : '解析する'}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"col-12 col-md-6\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title h4 mb-4\">アップロードされた画像</h2>\n            {preview ? (\n              <img src={preview} alt=\"プレビュー\" className=\"img-fluid\" />\n            ) : (\n              <p className=\"text-muted\">画像を選択してください</p>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"col-12 col-md-6\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title h4 mb-4\">抽出結果</h2>\n            {error ? (\n              <p className=\"text-danger\">{error}</p>\n            ) : isLoading ? (\n              <p>解析中...</p>\n            ) : storeInfo ? (\n              <dl className=\"row\">\n                {Object.entries(storeInfo).map(([key, value]) => {\n                  const label = {\n                    store_name: '店舗名',\n                    address: '住所',\n                    phone: '電話番号',\n                    hours: '営業時間',\n                    raw_response: '解析結果（生データ）',\n                  }[key] || key;\n                  return (\n                    <div key={key} className=\"col-12 mb-2\">\n                      <dt className=\"fw-medium text-muted\">{label}</dt>\n                      <dd>{value || '情報なし'}</dd>\n                    </div>\n                  );\n                })}\n              </dl>\n            ) : (\n              <p className=\"text-muted\">画像をアップロードしてください</p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///Users/bunkohei/dev/sandbox/tsuncore/next-app/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport ImageUpload from '@/components/ImageUpload';\n\nexport default function Home() {\n  return (\n    <main>\n      <h1 className=\"display-4 mb-4\">店舗情報抽出アプリ</h1>\n      <div className=\"card\">\n        <ImageUpload />\n      </div>\n    </main>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,8OAAC;;0BACC,8OAAC;gBAAG,WAAU;0BAAiB;;;;;;0BAC/B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,iIAAA,CAAA,UAAW;;;;;;;;;;;;;;;;AAIpB","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///Users/bunkohei/dev/sandbox/tsuncore/next-app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}